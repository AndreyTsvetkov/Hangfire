#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Hangfire.Dashboard.Pages
{
    
    #line 2 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
    using System;
    
    #line default
    #line hidden
    
    #line 3 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
    using System.CodeDom;
    
    #line default
    #line hidden
    using System.Collections.Generic;
    
    #line 4 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
    using System.Linq;
    
    #line default
    #line hidden
    using System.Text;
    
    #line 5 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
    using Hangfire.Common;
    
    #line default
    #line hidden
    
    #line 6 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
    using Hangfire.Dashboard;
    
    #line default
    #line hidden
    
    #line 7 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
    using Hangfire.Dashboard.Pages;
    
    #line default
    #line hidden
    
    #line 8 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
    using Hangfire.States;
    
    #line default
    #line hidden
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    internal partial class JobDetailsPage : RazorPage
    {
#line hidden

        public override void Execute()
        {


WriteLiteral("\r\n");










            
            #line 10 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
  
	var monitor = Storage.GetMonitoringApi();
	var job = monitor.JobDetails(JobId.ToString());

	string title = null;

	if (job != null)
	{
		title = job.Job != null ? Html.JobName(job.Job) : null;
	}

	title = title ?? "Job";
	Layout = new LayoutPage(title);


            
            #line default
            #line hidden
WriteLiteral("\r\n<div class=\"row\">\r\n\t<div class=\"col-md-3\">\r\n\t\t");


            
            #line 27 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
Write(Html.JobsSidebar());

            
            #line default
            #line hidden
WriteLiteral("\r\n\t</div>\r\n\t<div class=\"col-md-9\">\r\n\t\t<h1 class=\"page-header\">");


            
            #line 30 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
                     Write(title);

            
            #line default
            #line hidden
WriteLiteral("</h1>\r\n\r\n");


            
            #line 32 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
 		if (job == null)
		{

            
            #line default
            #line hidden
WriteLiteral("\t\t\t");

WriteLiteral(" The job with id \'");


            
            #line 34 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
                  Write(JobId);

            
            #line default
            #line hidden
WriteLiteral("\' has expired or could not be found on the server.\r\n");


            
            #line 35 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
		}
		else
		{
			var currentState = job.History.Count > 0 ? job.History[0] : null;
			if (currentState != null && currentState.StateName == ProcessingState.StateName)
			{
				var server = monitor.Servers().FirstOrDefault(x => x.Name == currentState.Data["ServerId"]);
				if (server == null)
				{

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t<div class=\"alert alert-danger\">\r\n\t\t\t\t\t\t<strong>The job was aborted</strong>" +
" – it is processed by server\r\n\t\t\t\t\t\t<code>");


            
            #line 46 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
       Write(currentState.Data["ServerId"]);

            
            #line default
            #line hidden
WriteLiteral("</code> which is not in the \r\n\t\t\t\t\t\t<a href=\"");


            
            #line 47 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
          Write(Url.To("/servers"));

            
            #line default
            #line hidden
WriteLiteral("\">active servers</a> list for now.\r\n\t\t\t\t\t\tIt will be retried automatically after " +
"invisibility timeout, but you can\r\n\t\t\t\t\t\talso re-queue or delete it manually.\r\n\t" +
"\t\t\t\t</div>\r\n");


            
            #line 51 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
				}
				else if (server.Heartbeat.HasValue && server.Heartbeat < DateTime.UtcNow.AddMinutes(-1))
				{

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t<div class=\"alert alert-warning\">\r\n\t\t\t\t\t\t<strong>Looks like the job was abor" +
"ted</strong> – it is processed by server\r\n\t\t\t\t\t\t<code>");


            
            #line 56 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
       Write(server.Name);

            
            #line default
            #line hidden
WriteLiteral("</code>, which reported its heartbeat more than 1 minute ago.\r\n\t\t\t\t\t\tIt will be r" +
"etried automatically after invisibility timeout, but you can\r\n\t\t\t\t\t\talso re-queu" +
"e or delete it manually.\r\n\t\t\t\t\t</div>\r\n");


            
            #line 60 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
				}
			}

			if (job.ExpireAt.HasValue)
			{

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t<div class=\"alert alert-info\">\r\n\t\t\t\t\t<strong>The job is finished</strong>.\r\n\t" +
"\t\t\t\tIt will be removed automatically <em><abbr data-moment=\"");


            
            #line 67 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
                                                        Write(JobHelper.ToTimestamp(job.ExpireAt.Value));

            
            #line default
            #line hidden
WriteLiteral("\">");


            
            #line 67 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
                                                                                                    Write(job.ExpireAt);

            
            #line default
            #line hidden
WriteLiteral("</abbr></em>.\r\n\t\t\t\t</div>\r\n");


            
            #line 69 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
			}


            
            #line default
            #line hidden
WriteLiteral("\t\t\t<div class=\"job-snippet\">\r\n\t\t\t\t<div class=\"job-snippet-header\">\r\n\t\t\t\t\t<span cl" +
"ass=\"job-snippet-tab\">\r\n\t\t\t\t\t\tJob ID: <span class=\"job-snippet-id\">");


            
            #line 74 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
                                      Write(Html.JobId(JobId.ToString(), false));

            
            #line default
            #line hidden
WriteLiteral("</span>\r\n\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t<span class=\"job-snippet-buttons pull-right\">\r\n\t\t\t\t" +
"\t\t<button class=\"btn btn-xs btn-default\" data-ajax=\"");


            
            #line 78 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
                                                   Write(Url.To("/jobs/actions/requeue/" + JobId));

            
            #line default
            #line hidden
WriteLiteral("\" data-loading-text=\"Enqueueing...\">Requeue</button>\r\n\t\t\t\t\t\t<button class=\"btn bt" +
"n-xs btn-death\" data-ajax=\"");


            
            #line 79 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
                                                 Write(Url.To("/jobs/actions/delete/" + JobId));

            
            #line default
            #line hidden
WriteLiteral("\" data-loading-text=\"Deleting...\" data-confirm=\"Do you really want to delete this" +
" job?\">Delete</button>\r\n\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t<div class=\"clearfix\"></div>\r\n\t\t\t\t<" +
"/div>\r\n\t\t\t\t<div class=\"job-snippet-body\">\r\n\t\t\t\t\t<div class=\"job-snippet-code\">\r\n" +
"");


            
            #line 86 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
 						if (job.CreatedAt.HasValue)
						{

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t\t<div class=\"pull-right job-creation-date\">\r\n\t\t\t\t\t\t\t\tCreated\r\n\t\t\t\t\t\t\t\t");


            
            #line 90 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
   Write(Html.RelativeTime(job.CreatedAt.Value));

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t\t\t\t</div>\r\n");


            
            #line 92 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
						}

            
            #line default
            #line hidden

            
            #line 93 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
 						if (job != null)
						{

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t\t<pre><code>");


            
            #line 95 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
             Write(JobMethodCallRenderer.Render(job.Job));

            
            #line default
            #line hidden
WriteLiteral("</code></pre>\r\n");


            
            #line 96 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
						}

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t<div class=\"clearfix\"></div>\r\n\t\t\t\t\t</div>\r\n\r\n");


            
            #line 100 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
 					if (job.Properties.Count > 0)
					{

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t<div class=\"job-snippet-properties\">\r\n\t\t\t\t\t\t\t<dl>\r\n");


            
            #line 104 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
 								foreach (var property in job.Properties)
								{

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t\t\t\t<dt>");


            
            #line 106 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
        Write(property.Key);

            
            #line default
            #line hidden
WriteLiteral("</dt>\r\n");



WriteLiteral("\t\t\t\t\t\t\t\t\t<dd>\r\n\t\t\t\t\t\t\t\t\t\t<pre><code>");


            
            #line 108 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
                Write(property.Value);

            
            #line default
            #line hidden
WriteLiteral("</code></pre>\r\n\t\t\t\t\t\t\t\t\t</dd>\r\n");


            
            #line 110 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
								}

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t\t</dl>\r\n\t\t\t\t\t\t</div>\r\n");


            
            #line 113 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
					}

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t</div>\r\n\t\t\t</div>\r\n");


            
            #line 116 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"

			if (job.Log.Any())
			{

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t<h3>Log</h3>\r\n");


            
            #line 120 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"

				var entriesCreationTime = job.Log.Select(x => x.CreatedAt).ToArray();
				var nextEntry = 1;
				foreach (var logItem in job.Log)
				{

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t<div class=\"job-log-item ");


            
            #line 125 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
                         Write(logItem.MessageClass);

            
            #line default
            #line hidden
WriteLiteral("\">\r\n\t\t\t\t\t\t<div class=\"pull-right heading\" title=\"");


            
            #line 126 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
                                        Write(logItem.MessageClass);

            
            #line default
            #line hidden
WriteLiteral("\">\r\n\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t");



WriteLiteral("\r\n\t\t\t\t\t\t\t\t");


            
            #line 129 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
   Write(Html.ToHumanTime(logItem.CreatedAt));

            
            #line default
            #line hidden
WriteLiteral("\r\n");


            
            #line 130 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
  								 nextEntry++; 

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<pre>");


            
            #line 133 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
      Write(logItem.MessageText);

            
            #line default
            #line hidden
WriteLiteral("</pre>\r\n\t\t\t\t\t</div>\r\n");


            
            #line 135 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
				}
			}

			if (job.History.Any())
			{

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t<h3>History</h3>\r\n");


            
            #line 141 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
				var index = 0;

				var entriesCreationTime = job.History.Select(x => x.CreatedAt).ToArray();
				var nextEntry = 1;

				foreach (var entry in job.History)
				{
					var background = index == 0
						? JobHistoryRenderer.GetForegroundStateColor(entry.StateName)
						: JobHistoryRenderer.GetBackgroundStateColor(entry.StateName);


            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t<div class=\"job-history ");


            
            #line 152 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
                         Write(index == 0 ? "job-history-current" : null);

            
            #line default
            #line hidden
WriteLiteral("\">\r\n\t\t\t\t\t\t<div class=\"job-history-heading\" style=\"");


            
            #line 153 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
                                         Write(String.Format("background-color: {0};", background));

            
            #line default
            #line hidden
WriteLiteral("\">\r\n\t\t\t\t\t\t\t<span class=\"pull-right\" data-moment-title=\"");


            
            #line 154 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
                                               Write(JobHelper.ToTimestamp(entry.CreatedAt));

            
            #line default
            #line hidden
WriteLiteral("\">\r\n\t\t\t\t\t\t\t\t");



WriteLiteral("\r\n\t\t\t\t\t\t\t\t");


            
            #line 156 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
   Write(Html.ToHumanTime(entry.CreatedAt));

            
            #line default
            #line hidden
WriteLiteral("\r\n");


            
            #line 157 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
  								 nextEntry++; 

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<h4 class=\"job-history-title\">\r\n\t\t\t\t\t\t\t\t");


            
            #line 160 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
   Write(entry.StateName);

            
            #line default
            #line hidden
WriteLiteral("\r\n\r\n");


            
            #line 162 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
 								if (!String.IsNullOrWhiteSpace(entry.Reason))
								{

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t\t\t\t<small>");


            
            #line 164 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
           Write(entry.Reason);

            
            #line default
            #line hidden
WriteLiteral("</small>\r\n");


            
            #line 165 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
								}

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t\t</h4>\r\n\t\t\t\t\t\t</div>\r\n\r\n");


            
            #line 169 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
 						if (JobHistoryRenderer.Exists(entry.StateName))
						{
							var rendered = Html.RenderHistory(entry.StateName, entry.Data);
							if (rendered != null)
							{

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t\t\t<div class=\"job-history-body\">\r\n\t\t\t\t\t\t\t\t\t");


            
            #line 175 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
    Write(rendered);

            
            #line default
            #line hidden
WriteLiteral("\r\n\t\t\t\t\t\t\t\t</div>\r\n");


            
            #line 177 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
							}
						}
						else
						{

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t\t<div class=\"job-history-body\">\r\n\t\t\t\t\t\t\t\t<dl class=\"dl-horizontal\">\r\n");


            
            #line 183 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
 									foreach (var item in entry.Data)
									{

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t\t\t\t\t<dt>");


            
            #line 185 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
         Write(item.Key);

            
            #line default
            #line hidden
WriteLiteral(":</dt>\r\n");



WriteLiteral("\t\t\t\t\t\t\t\t\t\t<dd>");


            
            #line 186 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
         Write(item.Value);

            
            #line default
            #line hidden
WriteLiteral("</dd>\r\n");


            
            #line 187 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
									}

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t\t\t\t</dl>\r\n\t\t\t\t\t\t\t</div>\r\n");


            
            #line 190 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"
						}

            
            #line default
            #line hidden
WriteLiteral("\t\t\t\t\t</div>\r\n");


            
            #line 192 "..\..\Dashboard\Pages\JobDetailsPage.cshtml"

						index++;
				}
			}
		}

            
            #line default
            #line hidden
WriteLiteral("\t</div>\r\n</div>");


        }
    }
}
#pragma warning restore 1591
